#!/usr/bin/env python3

import sys
from functools import reduce
from math import floor

#sys.argv = ["announcement", "#", "mornings\nheiseeeeo", "\ndu", "er\n", "meg"]
program_name = sys.argv.pop(0)
symbol = "#"

# Take input from stdin if not provided as terminal arguments
if not len(sys.argv):
    stdin = []
    for line in sys.stdin:
        stdin.append(line)

    sys.argv = stdin

if not len(sys.argv):
    sys.stderr.write("Sorry, you have to provide at least one argument. If first argument is a symbol, it wil be used as the border.")
    sys.exit(1)

def isLetterOrNum(some_string):
    if (some_string.isalnum()):
        return True
    if (some_string in ['æ', 'ø','å']):
        return True
    if (some_string in ['Æ', 'Ø','Å']):
        return True
    return False


if len(sys.argv[0].strip()) is 1 and not isLetterOrNum(sys.argv[0]):
    symbol = sys.argv.pop(0).strip()

message = " ".join(sys.argv).upper()

def lengthOfLongestLine(some_string):
    longest_sentence = reduce((lambda cur, next: cur if len(cur.strip()) > len(next.strip()) else next), some_string.splitlines())
    return len(longest_sentence.strip())

length_of_longest = lengthOfLongestLine(message)
width = length_of_longest + 8

top_bottom_line = symbol * width
empty_line = symbol + symbol.rjust(width-1)

announcement = "```"
announcement += "\n" + top_bottom_line + "\n"
announcement += empty_line + "\n"

for line in message.splitlines():
    sline = line.strip()
    announcement += symbol
    announcement += sline.rjust(floor((len(sline) + (width-1))/2)).ljust(width-2)
    announcement += symbol + "\n"

announcement += empty_line + "\n"
announcement += top_bottom_line + "\n"
announcement += "```"

print(announcement)
